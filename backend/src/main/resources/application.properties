# app name
spring.application.name=onbapsang-backend

# security
spring.security.user.name=admin
spring.security.user.password=1234

# port
server.port=8081

# MySQL
# === base : Docker or server env ===
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3307}/${MYSQL_DATABASE:bapsang}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
spring.datasource.username=${MYSQL_USER:bapsang_user}
spring.datasource.password=${MYSQL_PASSWORD:user2725}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# JPA
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
# backtick(don't use)
#spring.jpa.properties.hibernate.globally_quoted_identifiers=true
# mapping jpa
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl



# Redis
#spring.redis.host=localhost
spring.redis.host=redis
spring.redis.port=6379

# JSON
spring.jackson.serialization.indent_output=true

# Jwt
jwt.secret-key=27252725this1is2on3bap4sang5key27252725over32words

# S3
# ???
#cloud.aws.credentials.access-key=
#cloud.aws.credentials.secret-key=
# ???
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}
cloud.aws.region.static=ap-northeast-2
cloud.aws.s3.bucket=onbapsang-img-bucket
cloud.aws.stack.auto=false

